{"version":3,"sources":["playerStats.js"],"names":["components","initPlayerStats","playerId","componentId","_this","this","$","getJSON","done","data","players","filter","item","player","id","playerStats","currentPlayer","findStatHolders","document","getElementById","querySelectorAll","attributes","stats","value","parseInt","forEach","i","innerHTML","console","log","fail","jqxhr","textStatus","error","err","addEventListener"],"mappings":"YAAA,IAAMA,aACJC,gBAAiB,SAAUC,EAAUC,GAAa,GAAAC,GAAAC,IAChDC,GAAEC,QAAQ,2BACPC,KAAK,SAACC,GACLA,EAAKC,QAAQC,OAAO,SAACC,GAChBA,EAAKC,OAAOC,KAAOZ,IACpBE,EAAKW,aACHC,cAAeJ,IAInBR,EAAKW,YAAYE,gBAAmBC,SAASC,eAAehB,GAAaiB,iBAAiB,sBAC1FhB,EAAKW,YAAYM,YACfjB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MACxCnB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MACxCnB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MACxCC,SAASpB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MAAMnB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MAAM,KAAK,IAC1GC,UAAUpB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MAAQnB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,OAAOnB,EAAKW,YAAYC,cAAcM,MAAM,GAAGC,MAAM,KAAK,KAG9JnB,EAAKW,YAAYE,gBAAgBQ,QAAQ,SAACb,EAAMc,GAC9Cd,EAAKQ,iBAAiB,cAAc,GAAGO,UAAYvB,EAAKW,YAAYM,WAAWK,KAGjFE,QAAQC,IAARzB,OAGH0B,KAAK,SAACC,EAAOC,EAAYC,GACxB,GAAIC,GAAMF,EAAa,IAAMC,CAC7BL,SAAQC,IAAK,mBAAqBK,MAM1ChB,UAASiB,iBAAiB,mBAAoB,WAC5CnC,WAAWC,gBAAgB,KAAM","file":"playerStats.js","sourcesContent":["const components = {\n  initPlayerStats: function (playerId, componentId) {\n    $.getJSON('/data/player-stats.json')\n      .done((data) => {\n        data.players.filter((item) => {\n          if(item.player.id === playerId) {\n            this.playerStats = {\n              currentPlayer: item\n            };\n          }\n\n          this.playerStats.findStatHolders =  document.getElementById(componentId).querySelectorAll('section.playerStat');\n          this.playerStats.attributes = [\n            this.playerStats.currentPlayer.stats[6].value,\n            this.playerStats.currentPlayer.stats[0].value,\n            this.playerStats.currentPlayer.stats[5].value,\n            parseInt(this.playerStats.currentPlayer.stats[0].value/this.playerStats.currentPlayer.stats[6].value*100)/100,\n            parseInt((this.playerStats.currentPlayer.stats[8].value + this.playerStats.currentPlayer.stats[4].value)/this.playerStats.currentPlayer.stats[7].value*100)/100\n          ];\n\n          this.playerStats.findStatHolders.forEach((item, i)=> {\n            item.querySelectorAll('.statValue')[0].innerHTML = this.playerStats.attributes[i];\n          });\n\n          console.log(this);\n        });\n      })\n      .fail((jqxhr, textStatus, error) => {\n        var err = textStatus + ',' + error;\n        console.log( 'Request Failed: ' + err );\n      });\n  }\n};\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  components.initPlayerStats(4916, 'stats1');\n});\n"]}