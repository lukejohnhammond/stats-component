{"version":3,"sources":["playerStats.js"],"names":["player","data","i","item","stats","selectOptions","selectList","componentDiv","querySelectorAll","component","findStatHolders","selectedAttr","length","innerHTML","name","position","src","playerImage","alt","teamImage","teamName","checkPosition","pos","initPlayerStats","playerId","componentId","_this","this","document","getElementById","instance","$","getJSON","done","firstPlayerId","players","id","first","last","info","currentTeam","stat","toLowerCase","value","goalsPerMatch","parseInt","goals","appearances","passesPerMinute","fwd_pass","backward_pass","mins_played","addEventListener","e","target","getNewPlayer","fail","jqxhr","textStatus","error","err","console","log","components","playerStats"],"mappings":"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","file":"playerStats.js","sourcesContent":["const components = {\n  playerStats: {\n    initPlayerStats,\n    getNewPlayer,\n    checkPosition\n  }\n};\n\nfunction getNewPlayer(playerId, componentId) {\n  const component = this[componentId];\n  const componentDiv = component.componentDiv;\n  const player = component.data[playerId];\n\n  // get dom elems and set requested attrs\n  component.findStatHolders = componentDiv.querySelectorAll('section.playerStat');\n  component.selectedAttr = ['appearances', 'goals', 'goal_assist', 'goalsPerMatch', 'passesPerMinute'];\n\n  // populate attrs\n  for (let i = 0; i < component.findStatHolders.length; i++) {\n    const item = component.findStatHolders[i];\n    item.querySelectorAll('.statValue')[0].innerHTML = player[component.selectedAttr[i]] || 0;\n  }\n\n  // populate other dom elems as required\n  componentDiv.querySelectorAll('h1')[0].innerHTML = player.name;\n  componentDiv.querySelectorAll('h2')[0].innerHTML = player.position;\n  componentDiv.querySelectorAll('img')[0].src = player.playerImage;\n  componentDiv.querySelectorAll('img')[0].alt = player.name;\n  componentDiv.querySelectorAll('img')[1].src = player.teamImage;\n  componentDiv.querySelectorAll('img')[1].alt = player.teamName;\n}\n\nfunction checkPosition(pos) {\n  switch (pos) {\n    case 'D':\n      return 'Defender';\n    case 'M':\n      return 'Midfielder';\n    case 'F':\n      return 'Forward';\n  }\n}\n\nfunction initPlayerStats(playerId, componentId) {\n  this[componentId] = {\n    componentDiv: document.getElementById(componentId)\n  };\n  const instance = this[componentId];\n  const componentDiv = instance.componentDiv;\n\n  $.getJSON('/data/player-stats.json')\n    .done((data) => {\n      // Define some defaults\n      var selectOptions = '';\n      let firstPlayerId = 0;\n      instance.data = {};\n\n      // Log relevant info for each player\n      for (let i = 0;  i < data.players.length; i++) {\n        const item = data.players[i];\n        // Set first loaded player id\n        if(firstPlayerId === 0) firstPlayerId = item.player.id;\n\n        // Get attributes\n        instance.data[item.player.id] = {\n          name: item.player.name.first + ' ' + item.player.name.last,\n          position: this.checkPosition(item.player.info.position),\n          playerImage: '/images/players/p' + item.player.id + '.png',\n          teamImage: '/images/teams/t' + item.player.currentTeam.id + '.png',\n          teamName: item.player.currentTeam.name\n        };\n\n        // define object as player for easy reading\n        const player = instance.data[item.player.id];\n\n        // get player stats and reformat (to avoid missing and misaligned array values)\n        for (let i = 0;  i < item.stats.length; i++){\n          const stat = item.stats[i];\n          player[(stat.name).toLowerCase()] = stat.value;\n        }\n\n        player.goalsPerMatch = parseInt(player.goals/player.appearances*100)/100;\n        player.passesPerMinute = parseInt((player.fwd_pass + player.backward_pass)/player.mins_played*100)/100;\n\n        // write select options for dropdown\n        selectOptions += `<option value=\"${item.player.id}\">${item.player.name.first} ${item.player.name.last}</option>`;\n      }\n\n      // Set up select list and event listener\n      const selectList = componentDiv.querySelectorAll('select.playerSelector')[0];\n      selectList.addEventListener('change', (e) => {\n        if (parseInt(e.target.value) !== 0) this.getNewPlayer(e.target.value, componentId);\n      });\n      selectList.innerHTML = '<option value=\"0\">Select a player...</option>' + selectOptions;\n\n      // Populate first loaded player\n      this.getNewPlayer(firstPlayerId, componentId);\n    })\n    .fail((jqxhr, textStatus, error) => {\n      var err = textStatus + ',' + error;\n      console.log( 'Request Failed: ' + err );\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  components.playerStats.initPlayerStats(4916, 'stats1');\n});\n"]}